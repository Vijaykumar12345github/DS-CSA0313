#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>

struct node
{
	int data;
	struct node *next;
}
*head=NULL,*p,*t,*newnode;


void create()
{
	int n,i,ele;
	printf("no of elements in the elements:");
	scanf("%d",&n);
	
	for(i=0;i<n;i++)
	{
		printf("enter the element");
		scanf("%d",&ele);
		newnode=(struct node*)malloc(sizeof(struct node));
		newnode->data=ele;
		newnode->next=NULL;
		
		if(head==NULL)
		{
			head=newnode;
			p=head;
		}
		else
		{
			for(p=head;p->next!=NULL;p=p->next);
			
				p->next=newnode;
				p=newnode;
			
		}
	}
}

void display()
{
	if(head==NULL)
	printf("the single linked list is empty");
	else
	{
		for(p=head;p!=NULL;p=p->next)
		printf("%d ->",p->data);
	}
}
void insert_at_begin()
{
	int ele;
	printf("enter the element:");
	scanf("%d",&ele);
	newnode=(struct node*)malloc(sizeof (struct node));
	newnode->data=ele;
	p=head;
	newnode->next=p;
	head=newnode;
	p=newnode;
}
void insert_at_end()
{
	int ele;
	printf("enter the element:");
	scanf("%d",&ele);
	newnode=(struct node*)malloc(sizeof(struct node));
	newnode->data=ele;
	newnode->next=NULL;
	for(p=head;p->next!=NULL;p=p->next);
	p->next=newnode;
	p=newnode;
}
void insert_at_anypos()
{
	int pos,ele,i;
	printf("enter the element:");
	scanf("%d %d",&ele,&pos);
	newnode=(struct node*)malloc(sizeof(struct node));
	newnode->data=ele;
	for(i=1,p=head;i<pos;i++,p=p->next)
	t=p;
	t->next=newnode;
	newnode->next=p;
	p=newnode;
}
void delete_at_begin()
{
	int ele;
	p=head;
	ele=p->data;
	head=p->next;
	free(p);
	p=head;
	printf("the deleted element is %d",ele);
}
void delete_at_end()
{
	int ele;
	for(p=head;p->next!=NULL;p=p->next)
	t=p;
	ele=p->data;
	t->next=NULL;
	free(p);
	p=t;
	printf("the element deleted at the end is %d",ele);
}
void delete_at_anypos()
{
	int ele,i,pos;
	printf("enter the position in data:");
	scanf("%d",&pos);
	for(i=1,p=head;i<pos;i++,p=p->next)
	t=p;
	ele=p->data;
	t->next=p->next;
	free(p);
	p=t;
	printf("the deleted element in the list is %d",ele);
}
void even_odd_count()
{
	int i,EC,OC;
	for(i=1;i<p->data;i++)
	{
		if(i%2==0)
		EC++;
		else
		OC++;
	}
	printf("the even count of the linked list elements is %d",EC);
	printf("the odd count of the linked list elements is %d",OC);
}
void search_element()
{
	int key,flag=0,pos,i;
	printf("enter the key: ");
	scanf("%d",&key);
	
	for(p=head,i=1;p!=NULL;i++,p=p->next)
	{
	if(p->data==key)
	{
		flag=1;
		pos=1;
		break;
	}
   }
   if(flag==1)
   printf("the element is present in the list");
   else
   printf("the element is not in the list");
}
void reverse_data()
{
	int i,stk[20];
	
	
	
}


int main()
{
	int cho;
	do
	{
		printf("\nmain menu");
		printf("\n1.create\n2.display\n3.insert_at_begin\n4.insert_at_end\n5.insert_at_anypos\n6.delete_at_begin\n7.delete_at_end\n8.delete_at_anypos\n9.exit\n10.even_odd_count\n11.search_element");
		printf("\nenter your choice");
		scanf("%d",&cho);
		switch(cho)
		{
			case 1: create();break;
			case 2: display();break;
			case 3: insert_at_begin();break;
			case 4: insert_at_end();break;
			case 5: insert_at_anypos();break;
			case 6: delete_at_begin();break;
			case 7: delete_at_end();break;
			case 8: delete_at_anypos();break;
			case 9: exit(0);break;
			case 10: even_odd_count();break;
			case 11: search_element();break;
			default : printf("enter the choice between 1 to 10"); break;
		}
	}while(cho>=1&&cho<=11);
	return 0;
}
